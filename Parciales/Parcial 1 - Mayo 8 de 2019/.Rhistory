#Número de zonas
n <- 9
A1 <- c(0,1,0,1,1,1,0,0,0)
A2 <- c(1,0,1,0,1,0,0,1,0)
A3 <- c(0,1,0,1,0,1,0,1,1)
A4 <- c(1,0,1,0,1,0,0,0,1)
A5 <- c(1,1,0,1,0,0,0,0,0)
A6 <- c(1,0,1,0,0,0,0,1,0)
A7 <- c(0,0,0,0,0,0,0,1,1)
A8 <- c(0,1,1,0,0,1,1,0,0)
A9 <- c(0,0,1,1,0,0,1,0,0)
A <- c(A1,A2,A3,A4,A5,A6,A7,A8,A9)
MC <-matrix(A, nrow=9, ncol=9, byrow=T)
MC
MC
r la matriz
operacion <- function(vecinos)
{
suma <- 0
for(i in vecinos)
suma <- suma + vecinos[i]
print(suma)
}
operacion(A1)
operacion <- function(vecinos)
{
suma <- 0
for(i in vecinos)
suma <- suma + vecinos[i]
suma
suma
}
operacion(A1)
View(operacion)
operacion <- function(vecinos)
{
suma <- 0
for(i in vecinos){
suma <- suma + vecinos[i]
}
}
operacion(A1)
operacion <- function(vecinos)
{
suma <- 0
for(i in vecinos){
suma <- suma + vecinos[i]
}
suma
}
operacion(A1)
operacion <- function(vecinos)
{
suma <- 0
for(vecino in vecinos){
suma <- suma + vecinos[vecino]
}
suma
}
operacion(A1)
suma
Auno <- c(0,1,0,1,1,1,0,0,0)
operacion(Auno)
operacion <- function(vecinos)
{
suma <- 0
for(vecino in vecinos){
print(vecino)
suma <- suma + vecinos[vecino]
}
}
operacion(Auno)
operacion <- function(vecinos)
{
suma <- 0
for(vecino in vecinos){
print(vecino)
print(vecinos[vecino])
suma <- suma + vecino
}
}
operacion(Auno)
operacion <- function(vecinos)
{
suma <- 0
for(vecino in vecinos){
suma <- suma + vecino
}
}
operacion(Auno)
suma
je <- operacion(Auno)
je
operacion <- function(vecinos)
{
suma <- 0
for(vecino in vecinos){
suma <- suma + vecino
}
suma
}
operacion(Auno)
je <- operacion(Auno)
je
je
je <- operacion(A1)
je
estvecino <- function(vecinos)
{
for(i in seq_along(vecinos)) { # Accediendo a los elementos por su índice
print(x[i])
}
}
estvecino(A1)
estvecino <- function(vecinos)
{
for(i in seq_along(vecinos)) { # Accediendo a los elementos por su índice
print(vecinos[i])
}
}
je <- operacion(A1)
estvecino(A1)
estvecino(A1,je)
je <- operacion(A1)
estvecino(A1,je)
estvecino <- function(vecinos, sumavecinos)
{
for(i in seq_along(vecinos)) { # Accediendo a los elementos por su índice
vecinos[i] <- vecinos[i]/sumavecinos
}
}
estvecino(A1,je)
lol <- estvecino(A1,je)
lol <- estvecino(A1,je)
lol
A1
sumA1 <- sumavecinos(A1)
sumA1 <- sumavecinos(A1)
sumavecinos <- function(vecinos)
{
suma <- 0
for(vecino in vecinos){ #Accedemos a los datos directamente
suma <- suma + vecino
}
}
A
A1
operacion <- function(vecinos)
{
suma <- 0
for(vecino in vecinos){
suma <- suma + vecino
}
suma
}
je <- operacion(A1)
je
operacion <- function(vecinos)
{
suma <- 0
for(vecino in vecinos){
suma <- suma + vecino
}
}
je <- operacion(A1)
je
sumavecino <- function(vecinos)
{
suma <- 0
for(vecino in vecinos){
suma <- suma + vecino
}
suma
}
je <- operacion(A1)
sumavecinos <- function(vecinos)
{
suma <- 0
for(vecino in vecinos){
suma <- suma + vecino
}
suma
}
je <- sumavecinos(A1)
je
A1/je -> A1
A1
#Número de zonas
n <- 9
A1<- c(0,1,0,1,1,1,0,0,0)
A2 <- c(1,0,1,0,1,0,0,1,0)
A3 <- c(0,1,0,1,0,1,0,1,1)
A4 <- c(1,0,1,0,1,0,0,0,1)
A5 <- c(1,1,0,1,0,0,0,0,0)
A6 <- c(1,0,1,0,0,0,0,1,0)
A7 <- c(0,0,0,0,0,0,0,1,1)
A8 <- c(0,1,1,0,0,1,1,0,0)
A9 <- c(0,0,1,1,0,0,1,0,0)
sumavecinos <- function(vecinos)
{
suma <- 0
for(vecino in vecinos){
suma <- suma + vecino
}
suma
}
svA1 <- sumavecinos(A1)
A1/sbA1 -> A1
A1/svA1 -> A1
svA1 <- sumavecinos(A1)
svA2 <- sumavecinos(A2)
svA3 <- sumavecinos(A3)
svA4 <- sumavecinos(A4)
svA5 <- sumavecinos(A5)
svA6 <- sumavecinos(A6)
svA7 <- sumavecinos(A7)
svA8 <- sumavecinos(A8)
svA9 <- sumavecinos(A9)
A1/svA1 -> A1
A1
A1/svA1 -> A1
A1/svA1 -> A1#Concatenamos los datos
A1/svA1 -> A1
A1/svA1 -> A1
A2/svA2 -> A2
A3/svA3 -> A3
A4/svA4 -> A4
A5/svA5 -> A5
A6/svA6 -> A6
A7/svA7 -> A7
A8/svA8 -> A8
A9/svA9 -> A9
A <- c(A1,A2,A3,A4,A5,A6,A7,A8,A9)
#Realizar Matriz de Contigüiddad Orden 2 efecto reina
MC <-matrix(A, nrow=9, ncol=9, byrow=T)
MX
MC
#Número de zonas
n <- 9
#Definir vecino Orden 2 efectoReina
A1<- c(0,1,0,1,1,1,0,0,0)
A2 <- c(1,0,1,0,1,0,0,1,0)
A3 <- c(0,1,0,1,0,1,0,1,1)
A4 <- c(1,0,1,0,1,0,0,0,1)
A5 <- c(1,1,0,1,0,0,0,0,0)
A6 <- c(1,0,1,0,0,0,0,1,0)
A7 <- c(0,0,0,0,0,0,0,1,1)
A8 <- c(0,1,1,0,0,1,1,0,0)
A9 <- c(0,0,1,1,0,0,1,0,0)
#Estandarizar la matriz
sumavecinos <- function(vecinos)
{
suma <- 0
for(vecino in vecinos){
suma <- suma + vecino
}
suma
}
svA1 <- sumavecinos(A1)
svA2 <- sumavecinos(A2)
svA3 <- sumavecinos(A3)
svA4 <- sumavecinos(A4)
svA5 <- sumavecinos(A5)
svA6 <- sumavecinos(A6)
svA7 <- sumavecinos(A7)
svA8 <- sumavecinos(A8)
svA9 <- sumavecinos(A9)
A1/svA1 -> A1
A2/svA2 -> A2
A3/svA3 -> A3
A4/svA4 -> A4
A5/svA5 -> A5
A6/svA6 -> A6
A7/svA7 -> A7
A8/svA8 -> A8
A9/svA9 -> A9
#Concatenamos los datos
A <- c(A1,A2,A3,A4,A5,A6,A7,A8,A9)
# Matriz W
W <-matrix(A, nrow=9, ncol=9, byrow=T)
Z1 <- 45
Z2 <- 23
Z3 <- 86
Z4 <- 64
Z5 <- 38
Z6 <- 7
Z7 <- 3
Z8 <- 9
Z9 <- 56
y1 <- 5
y2 <- 3
y3 <- 6
y4 <- 2
y5 <- 7
y6 <- 4
y7 <- 0
y8 <- 1
y9 <- 7
for(i in seq_len(nrow(W))) {
for(j in seq_len(ncol(W))) {
print(W[i, j])
}
}
Z <- c(45,23, 86, 64,38, 7,3,9, 56)
moran <- function(matrizw, variableregionaliza) {
for(i in seq_len(nrow(matrizw))) {
print(i)
for(j in seq_len(ncol(matrizw))) {
print(matrizw[i, j])
}
}
}
moran(W,Z)
moran <- function(matrizw, variableregionaliza) {
for(i in seq_len(nrow(matrizw))) {
print('----')
print(i)
for(j in seq_len(ncol(matrizw))) {
print(matrizw[i, j])
}
}
}
moran(W,Z)
moran <- function(matrizw, varegion) {
for(i in seq_len(nrow(matrizw))) {
print('----')
print(varegion[i])
for(j in seq_len(ncol(matrizw))) {
print(matrizw[i, j])
}
}
}
moran(W,Z)
moran <- function(matrizw, z) {
zm <- mean(matrizw, trim=0, na.rm=TRUE)
print('----')
print(zm)
print('----')
for(i in seq_len(nrow(matrizw))) {
print('----')
print(varegion[i])
for(j in seq_len(ncol(matrizw))) {
print(matrizw[i, j])
}
}
}
moran(W,Z)
moran <- function(matrizw, z) {
zm <- mean(z, trim=0, na.rm=TRUE)
print('----')
print(zm)
print('----')
for(i in seq_len(nrow(matrizw))) {
print('----')
print(z[i])
for(j in seq_len(ncol(matrizw))) {
print(matrizw[i, j])
}
}
}
moran(W,Z)
moran <- function(matrizw, z, n) {
zm <- mean(z, trim=0, na.rm=TRUE)
suma <- 0
sumb <- 0
sumc <- 0
a <- for(i in seq_len(nrow(matrizw))) {
for(j in seq_len(ncol(matrizw))) {
suma <- suma + matrizw[i, j] * (z[i] - zm) *  (z[j] - zm)
}
}
b <- for (i in seq_len(nrow(matrizw))) {
for (j in seq_len(ncol(matrizw))) {
sumb <- sumb + matrizw[i, j]
}
}
c <-for (i in seq_len(z)) {
sumc <- sumc + (z[i]-zm)^2
}
I <- (n*a)/(b*c)
I
}
moran(W,Z, n)
moran <- function(matrizw, z, n) {
zm <- mean(z, trim=0, na.rm=TRUE)
suma <- 0
sumb <- 0
sumc <- 0
a <- for(i in seq_len(nrow(matrizw))) {
for(j in seq_len(ncol(matrizw))) {
suma <- suma + matrizw[i, j] * (z[i] - zm) *  (z[j] - zm)
}
}
b <- for (i in seq_len(nrow(matrizw))) {
for (j in seq_len(ncol(matrizw))) {
sumb <- sumb + matrizw[i, j]
}
}
c <-for (valorz in z) {
sumc <- sumc + (valorz-zm)^2
}
I <- (n*a)/(b*c)
I
}
moran(W,Z, n)
lol <- moran(W,Z, n)
lol
for(i in seq_len(nrow(matrizw))) {
for(j in seq_len(ncol(matrizw))) {
suma <- suma + matrizw[i, j] * (z[i] - zm) *  (z[j] - zm)
}
a <- for(i in seq_len(nrow(matrizw))) {
for(j in seq_len(ncol(matrizw))) {
suma <- suma + matrizw[i, j] * (z[i] - zm) *  (z[j] - zm)
}
}
a
for(i in seq_len(nrow(matrizw))) {
for(j in seq_len(ncol(matrizw))) {
suma <- suma + matrizw[i, j] * (z[i] - zm) *  (z[j] - zm)
}
}
a <- {
suma <- 0
for(i in seq_len(nrow(matrizw))) {
for(j in seq_len(ncol(matrizw))) {
suma <- suma + matrizw[i, j] * (z[i] - zm) *  (z[j] - zm)
}
}
suma
}
a <- {
suma <- 0
for(i in seq_len(nrow(matrizw))) {
for(j in seq_len(ncol(matrizw))) {
suma <- suma + matrizw[i, j] * (z[i] - zm) *  (z[j] - zm)
}
}
suma
}
a <- {
suma <- 0
for(i in seq_len(nrow(matrizw))) {
for(j in seq_len(ncol(matrizw))) {
suma <- suma + matrizw[i, j] * (z[i] - zm) *  (z[j] - zm)
}
}
suma
}
jhg
n
;
m
sumb <- 0
W
sumavecinos <- function(vecinos)
{
suma <- 0
for(vecino in vecinos){
suma <- suma + vecino
}
return(suma)
}
